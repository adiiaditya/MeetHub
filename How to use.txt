The number of lines of code: 9000




*********************************************************************************
Assignment Features:
*********************************************************************************
1. Assignment#1- servlets and hash maps is used for implementation.
2. Assignment#2- sql is used for storing user information, group information, event information, message, status updates, friendlist information, users attending events and mongoDB is used to store the user comments.
3. Assignment#3- jsp is used for implementation.
4. Assignment#4- The ajax auto search completion feature is used to find friends.
5. Assignment#5- twitter is used to display tweets for the university groups.



***********************************************************************************
Features and functionalities in the project:
***********************************************************************************
1. user can register and login using .edu mail-id.
2. user can upload a profile and cover picture and update their profile information.
3. user can update their status on timeline.
4. user can comment on the status on the timeline of other users.
5. user can add other users as a friend, which will be displayed on their friends page along with their mutual friends.
6. user can send messages to other users,reply to messages, view the sent messages and the conversation thread.
7. user can create events and add friends to the event.
8. The user can see the list of events which he/she has created and has been added to.
9. Groups of different universities.
10. user can join/leave any university group.
11. user can see the members of a particular university group.

12. User can see the tweets based on the university groups.
13. user can upload/download documents.
14. The document can be uploaded as private/public.
	a. If shared as public, users from any university can access the document.
	b. If shared as private, users from only that particular university can access the document under which it is uploaded.



*************************************************************************************************
Deployment and Run Information:
*************************************************************************************************
	
	1. Start the MongoDB server with mongod.exe. 
		
	2. Start the MySQL database
		* database name is “MeetHubDatabase” so create that first
		* The create table commands of each table that are necessary for the project to run are given in the queries.txt file
		* Tables created are:
			a. AddTogroup.
			b. EventsTable.
			c. FriendList.
			d. MessageList.
			
			e. StatusList.
			
			f. UserEvent.
		
			g. UserProfile.
		* The information to automatically populate the database is given in the .sql files present in the Data folder. These can be imported by going to Server, Data Import, Import from self contained file, browse to the particular file to be imported, select default target schema as MeetHubDatabase and select start import.
		* Repeat this step for all the files present in the Data folder.

	3. Add the two jar files that are present in the "jar files" folder that is given into the lib folder of apache.
 
	4. Run the following command to compile all the files:
		javac -cp "/usr/local/Cellar/tomcat/8.5.5/libexec/lib/servlet-api.jar:/usr/local/Cellar/tomcat/8.5.5/libexec/lib/mysql-connector-java-5.1.40-bin.jar:/usr/local/Cellar/tomcat/8.5.5/libexec/lib/mongo-java-driver-3.2.2.jar:/usr/local/Cellar/tomcat/8.5.5/libexec/lib/commons-fileupload-1.3.2.jar:/usr/local/Cellar/tomcat/8.5.5/libexec/lib/commons-io-2.5.jar" *.java

	5. Copy "csj" folder on to the tomcat web app folder.
	
	6. Run the python script.
		
		a. credentials.txt which contains all the login and access permission info.
				
		b. The script searches for tweets with the different university names and generates four output files- Illinois Tech.txt, Harvard.txt, Stanford.txt, University Of 				Illinois.txt.

 	7. Start tomcat server

 	8. open the browser and type localhost:8080/Project/index.html